/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.11.1
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    UiNodeAnchorAttributes,
    instanceOfUiNodeAnchorAttributes,
    UiNodeAnchorAttributesFromJSON,
    UiNodeAnchorAttributesFromJSONTyped,
    UiNodeAnchorAttributesToJSON,
} from './UiNodeAnchorAttributes';
import {
    UiNodeImageAttributes,
    instanceOfUiNodeImageAttributes,
    UiNodeImageAttributesFromJSON,
    UiNodeImageAttributesFromJSONTyped,
    UiNodeImageAttributesToJSON,
} from './UiNodeImageAttributes';
import {
    UiNodeInputAttributes,
    instanceOfUiNodeInputAttributes,
    UiNodeInputAttributesFromJSON,
    UiNodeInputAttributesFromJSONTyped,
    UiNodeInputAttributesToJSON,
} from './UiNodeInputAttributes';
import {
    UiNodeScriptAttributes,
    instanceOfUiNodeScriptAttributes,
    UiNodeScriptAttributesFromJSON,
    UiNodeScriptAttributesFromJSONTyped,
    UiNodeScriptAttributesToJSON,
} from './UiNodeScriptAttributes';
import {
    UiNodeTextAttributes,
    instanceOfUiNodeTextAttributes,
    UiNodeTextAttributesFromJSON,
    UiNodeTextAttributesFromJSONTyped,
    UiNodeTextAttributesToJSON,
} from './UiNodeTextAttributes';

/**
 * @type UiNodeAttributes
 * 
 * @export
 */
export type UiNodeAttributes = { node_type: 'a' } & UiNodeAnchorAttributes | { node_type: 'img' } & UiNodeImageAttributes | { node_type: 'input' } & UiNodeInputAttributes | { node_type: 'script' } & UiNodeScriptAttributes | { node_type: 'text' } & UiNodeTextAttributes;

export function UiNodeAttributesFromJSON(json: any): UiNodeAttributes {
    return UiNodeAttributesFromJSONTyped(json, false);
}

export function UiNodeAttributesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiNodeAttributes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['node_type']) {
        case 'a':
            return {...UiNodeAnchorAttributesFromJSONTyped(json, true), node_type: 'a'};
        case 'img':
            return {...UiNodeImageAttributesFromJSONTyped(json, true), node_type: 'img'};
        case 'input':
            return {...UiNodeInputAttributesFromJSONTyped(json, true), node_type: 'input'};
        case 'script':
            return {...UiNodeScriptAttributesFromJSONTyped(json, true), node_type: 'script'};
        case 'text':
            return {...UiNodeTextAttributesFromJSONTyped(json, true), node_type: 'text'};
        default:
            throw new Error(`No variant of UiNodeAttributes exists with 'node_type=${json['node_type']}'`);
    }
}

export function UiNodeAttributesToJSON(value?: UiNodeAttributes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['node_type']) {
        case 'a':
            return UiNodeAnchorAttributesToJSON(value);
        case 'img':
            return UiNodeImageAttributesToJSON(value);
        case 'input':
            return UiNodeInputAttributesToJSON(value);
        case 'script':
            return UiNodeScriptAttributesToJSON(value);
        case 'text':
            return UiNodeTextAttributesToJSON(value);
        default:
            throw new Error(`No variant of UiNodeAttributes exists with 'node_type=${value['node_type']}'`);
    }

}

