/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.11.1
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateVerificationFlowWithCodeMethodBody
 */
export interface UpdateVerificationFlowWithCodeMethodBody {
    /**
     * The verification code
     * @type {string}
     * @memberof UpdateVerificationFlowWithCodeMethodBody
     */
    code?: string;
    /**
     * Sending the anti-csrf token is only required for browser login flows.
     * @type {string}
     * @memberof UpdateVerificationFlowWithCodeMethodBody
     */
    csrf_token?: string;
    /**
     * Email to Verify
     * 
     * Needs to be set when initiating the flow. If the email is a registered
     * verification email, a verification link will be sent. If the email is not known,
     * a email with details on what happened will be sent instead.
     * 
     * format: email
     * @type {string}
     * @memberof UpdateVerificationFlowWithCodeMethodBody
     */
    email?: string;
    /**
     * The id of the flow
     * @type {string}
     * @memberof UpdateVerificationFlowWithCodeMethodBody
     */
    flow?: string;
    /**
     * Method is the recovery method
     * @type {string}
     * @memberof UpdateVerificationFlowWithCodeMethodBody
     */
    method?: string;
}

/**
 * Check if a given object implements the UpdateVerificationFlowWithCodeMethodBody interface.
 */
export function instanceOfUpdateVerificationFlowWithCodeMethodBody(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateVerificationFlowWithCodeMethodBodyFromJSON(json: any): UpdateVerificationFlowWithCodeMethodBody {
    return UpdateVerificationFlowWithCodeMethodBodyFromJSONTyped(json, false);
}

export function UpdateVerificationFlowWithCodeMethodBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateVerificationFlowWithCodeMethodBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'csrf_token': !exists(json, 'csrf_token') ? undefined : json['csrf_token'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'flow': !exists(json, 'flow') ? undefined : json['flow'],
        'method': !exists(json, 'method') ? undefined : json['method'],
    };
}

export function UpdateVerificationFlowWithCodeMethodBodyToJSON(value?: UpdateVerificationFlowWithCodeMethodBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'csrf_token': value.csrf_token,
        'email': value.email,
        'flow': value.flow,
        'method': value.method,
    };
}

