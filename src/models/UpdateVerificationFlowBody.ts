/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.11.1
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    UpdateVerificationFlowWithLinkMethod,
    instanceOfUpdateVerificationFlowWithLinkMethod,
    UpdateVerificationFlowWithLinkMethodFromJSON,
    UpdateVerificationFlowWithLinkMethodFromJSONTyped,
    UpdateVerificationFlowWithLinkMethodToJSON,
} from './UpdateVerificationFlowWithLinkMethod';

/**
 * @type UpdateVerificationFlowBody
 * nolint:deadcode,unused
 * @export
 */
export type UpdateVerificationFlowBody = { method: 'link' } & UpdateVerificationFlowWithLinkMethod;

export function UpdateVerificationFlowBodyFromJSON(json: any): UpdateVerificationFlowBody {
    return UpdateVerificationFlowBodyFromJSONTyped(json, false);
}

export function UpdateVerificationFlowBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateVerificationFlowBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['method']) {
        case 'link':
            return {...UpdateVerificationFlowWithLinkMethodFromJSONTyped(json, true), method: 'link'};
        default:
            throw new Error(`No variant of UpdateVerificationFlowBody exists with 'method=${json['method']}'`);
    }
}

export function UpdateVerificationFlowBodyToJSON(value?: UpdateVerificationFlowBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['method']) {
        case 'link':
            return UpdateVerificationFlowWithLinkMethodToJSON(value);
        default:
            throw new Error(`No variant of UpdateVerificationFlowBody exists with 'method=${value['method']}'`);
    }

}

