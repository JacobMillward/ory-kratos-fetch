/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.11.1
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    UpdateLoginFlowWithLookupSecretMethod,
    instanceOfUpdateLoginFlowWithLookupSecretMethod,
    UpdateLoginFlowWithLookupSecretMethodFromJSON,
    UpdateLoginFlowWithLookupSecretMethodFromJSONTyped,
    UpdateLoginFlowWithLookupSecretMethodToJSON,
} from './UpdateLoginFlowWithLookupSecretMethod';
import {
    UpdateLoginFlowWithOidcMethod,
    instanceOfUpdateLoginFlowWithOidcMethod,
    UpdateLoginFlowWithOidcMethodFromJSON,
    UpdateLoginFlowWithOidcMethodFromJSONTyped,
    UpdateLoginFlowWithOidcMethodToJSON,
} from './UpdateLoginFlowWithOidcMethod';
import {
    UpdateLoginFlowWithPasswordMethod,
    instanceOfUpdateLoginFlowWithPasswordMethod,
    UpdateLoginFlowWithPasswordMethodFromJSON,
    UpdateLoginFlowWithPasswordMethodFromJSONTyped,
    UpdateLoginFlowWithPasswordMethodToJSON,
} from './UpdateLoginFlowWithPasswordMethod';
import {
    UpdateLoginFlowWithTotpMethod,
    instanceOfUpdateLoginFlowWithTotpMethod,
    UpdateLoginFlowWithTotpMethodFromJSON,
    UpdateLoginFlowWithTotpMethodFromJSONTyped,
    UpdateLoginFlowWithTotpMethodToJSON,
} from './UpdateLoginFlowWithTotpMethod';
import {
    UpdateLoginFlowWithWebAuthnMethod,
    instanceOfUpdateLoginFlowWithWebAuthnMethod,
    UpdateLoginFlowWithWebAuthnMethodFromJSON,
    UpdateLoginFlowWithWebAuthnMethodFromJSONTyped,
    UpdateLoginFlowWithWebAuthnMethodToJSON,
} from './UpdateLoginFlowWithWebAuthnMethod';

/**
 * @type UpdateLoginFlowBody
 * 
 * @export
 */
export type UpdateLoginFlowBody = { method: 'lookup_secret' } & UpdateLoginFlowWithLookupSecretMethod | { method: 'oidc' } & UpdateLoginFlowWithOidcMethod | { method: 'password' } & UpdateLoginFlowWithPasswordMethod | { method: 'totp' } & UpdateLoginFlowWithTotpMethod | { method: 'webauthn' } & UpdateLoginFlowWithWebAuthnMethod;

export function UpdateLoginFlowBodyFromJSON(json: any): UpdateLoginFlowBody {
    return UpdateLoginFlowBodyFromJSONTyped(json, false);
}

export function UpdateLoginFlowBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLoginFlowBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['method']) {
        case 'lookup_secret':
            return {...UpdateLoginFlowWithLookupSecretMethodFromJSONTyped(json, true), method: 'lookup_secret'};
        case 'oidc':
            return {...UpdateLoginFlowWithOidcMethodFromJSONTyped(json, true), method: 'oidc'};
        case 'password':
            return {...UpdateLoginFlowWithPasswordMethodFromJSONTyped(json, true), method: 'password'};
        case 'totp':
            return {...UpdateLoginFlowWithTotpMethodFromJSONTyped(json, true), method: 'totp'};
        case 'webauthn':
            return {...UpdateLoginFlowWithWebAuthnMethodFromJSONTyped(json, true), method: 'webauthn'};
        default:
            throw new Error(`No variant of UpdateLoginFlowBody exists with 'method=${json['method']}'`);
    }
}

export function UpdateLoginFlowBodyToJSON(value?: UpdateLoginFlowBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['method']) {
        case 'lookup_secret':
            return UpdateLoginFlowWithLookupSecretMethodToJSON(value);
        case 'oidc':
            return UpdateLoginFlowWithOidcMethodToJSON(value);
        case 'password':
            return UpdateLoginFlowWithPasswordMethodToJSON(value);
        case 'totp':
            return UpdateLoginFlowWithTotpMethodToJSON(value);
        case 'webauthn':
            return UpdateLoginFlowWithWebAuthnMethodToJSON(value);
        default:
            throw new Error(`No variant of UpdateLoginFlowBody exists with 'method=${value['method']}'`);
    }

}

