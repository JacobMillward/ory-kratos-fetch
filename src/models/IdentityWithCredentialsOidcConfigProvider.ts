/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v0.11.1
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Create Identity and Import Social Sign In Credentials Configuration
 * @export
 * @interface IdentityWithCredentialsOidcConfigProvider
 */
export interface IdentityWithCredentialsOidcConfigProvider {
    /**
     * The OpenID Connect provider to link the subject to. Usually something like `google` or `github`.
     * @type {string}
     * @memberof IdentityWithCredentialsOidcConfigProvider
     */
    provider: string;
    /**
     * The subject (`sub`) of the OpenID Connect connection. Usually the `sub` field of the ID Token.
     * @type {string}
     * @memberof IdentityWithCredentialsOidcConfigProvider
     */
    subject: string;
}

/**
 * Check if a given object implements the IdentityWithCredentialsOidcConfigProvider interface.
 */
export function instanceOfIdentityWithCredentialsOidcConfigProvider(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "provider" in value;
    isInstance = isInstance && "subject" in value;

    return isInstance;
}

export function IdentityWithCredentialsOidcConfigProviderFromJSON(json: any): IdentityWithCredentialsOidcConfigProvider {
    return IdentityWithCredentialsOidcConfigProviderFromJSONTyped(json, false);
}

export function IdentityWithCredentialsOidcConfigProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityWithCredentialsOidcConfigProvider {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'provider': json['provider'],
        'subject': json['subject'],
    };
}

export function IdentityWithCredentialsOidcConfigProviderToJSON(value?: IdentityWithCredentialsOidcConfigProvider | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'provider': value.provider,
        'subject': value.subject,
    };
}

